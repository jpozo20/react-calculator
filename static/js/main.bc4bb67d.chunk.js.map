{"version":3,"sources":["components/Button/Button.module.css","components/Screen/Screen.module.css","containers/Calculator/Calculator.module.css","containers/Buttons/Buttons.module.css","containers/Buttons/Numbers/Numbers.module.css","containers/Buttons/Functions/Functions.module.css","containers/Buttons/Operators/Operators.module.css","components/Button/Button.js","containers/Buttons/Numbers/Numbers.js","containers/Buttons/Functions/Functions.js","containers/Buttons/Operators/Operators.js","containers/Buttons/Buttons.js","helpers/Constants.js","helpers/helpers.js","components/Screen/Screen.js","containers/Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","type","className","classes","data-action","action","onClick","buttonClicked","disabled","text","Numbers","numberButtons","moreLess","key","decimalPoint","numbers","i","button","push","Functions","functionButtons","forEach","item","Operators","operatorButtons","Buttons","Constants","SpecialKeys","PlusLess","DecimalPoint","OperatorKeys","Add","Substract","Equals","Delete","Multiply","Division","FunctionKeys","Percentage","SquareRoot","PowerTwo","PowerN","Logarithm","NaturalLogarithm","Clear","Helpers","decodeHtml","htmlEntity","txt","document","createElement","innerHTML","value","getOperationFromKeyPress","event","result","operation","switchOperation","prevResultString","currOperation","lastIndex","length","substr","Screen","PrevResult","this","prevResult","Result","input","Component","Calculator","state","accumulator","prevButton","shouldUpdateInput","noRenderState","shouldUpdateWithoutRender","addActiveStyle","textContent","classList","add","buttonClasses","Active","remove","setState","handleClick","target","getAttribute","handleInput","handleKeyPress","isNaN","eventResult","handleNumber","handleOperator","handleFunction","plusLess","parsed","Number","indexOf","concat","replace","usePreviousInput","shouldContinueSwitch","subtract","multiply","divide","usePreviousOperation","percentage","squareRoot","powerTwo","logarithm","logarithmNatural","clear","useAccumulator","toString","slice","previousResult","Math","sqrt","pow","powerN","log10","log","addEventListener","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc4bb67d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Active\":\"Button_Active__cY1li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Screen_Screen__2d8yI\",\"PrevResult\":\"Screen_PrevResult__279ZQ\",\"Result\":\"Screen_Result__Qmtjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__PaHT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"Buttons_Buttons__2XOSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Numbers\":\"Numbers_Numbers__1h4qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Functions\":\"Functions_Functions__2Ptg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Operators\":\"Operators_Operators__2qYIq\"};","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={classes.Button}\n\t\t\tdata-action={props.action}\n\t\t\tonClick={props.buttonClicked}\n\t\t\tdisabled={props.disabled}>\n\t\t\t{props.text}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport classes from \"./Numbers.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Numbers = (props) => {\n\tconst numberButtons = [];\n\tconst moreLess = (\n\t\t<Button key=\"xx\" text=\"&plusmn;\" action=\"number\" buttonClicked={props.buttonClicked} />\n\t);\n\tconst decimalPoint = (\n\t\t<Button key=\"xy\" text=\".\" action=\"number\" buttonClicked={props.buttonClicked} />\n\t);\n\tconst numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n\tfor (var i = 0; i <= 9; i++) {\n\t\tvar button = (\n\t\t\t<Button key={i + \"x\"} text={numbers[i]} buttonClicked={props.buttonClicked} action=\"number\" />\n\t\t);\n\t\tnumberButtons.push(button);\n\t}\n\n\tnumberButtons.push(moreLess, decimalPoint);\n\treturn <div className={classes.Numbers}>{numberButtons}</div>;\n};\n\nexport default Numbers;\n","import React from \"react\";\n\nimport classes from \"./Functions.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Functions = (props) => {\n\tconst functionButtons = [];\n\t//                      SQRT,     x ^ 2,     x ^ n,\n\tconst functions = [\"%\", \"\\u221a\", \"x\\u00b2\", \"log\", \"logn\"];\n\tfunctions.forEach((item) => {\n\t\tfunctionButtons.push(\n\t\t\t<Button\n\t\t\t\tkey={item}\n\t\t\t\ttext={item}\n\t\t\t\tbuttonClicked={props.buttonClicked}\n\t\t\t\taction=\"function\"\n\t\t\t\tdisabled={true}\n\t\t\t/>\n\t\t);\n\t});\n\tfunctionButtons.push(\n\t\t<Button key=\"C\" text=\"C\" buttonClicked={props.buttonClicked} action=\"function\" />\n\t);\n\treturn <div className={classes.Functions}>{functionButtons}</div>;\n};\n\nexport default Functions;\n","import React from \"react\";\n\nimport classes from \"./Operators.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Operators = (props) => {\n\tconst operatorButtons = [];\n\t//                 Delete,  Multiply,   Divide\n\tconst operators = [\"\\u232b\", \"\\u00d7\", \"\\u00f7\", \"+\", \"-\", \"=\"];\n\toperators.forEach((item) => {\n\t\toperatorButtons.push(\n\t\t\t<Button\n\t\t\t\tkey={item}\n\t\t\t\ttext={item}\n\t\t\t\tbuttonClicked={props.buttonClicked}\n\t\t\t\taction=\"operation\"\n\t\t\t/>\n\t\t);\n\t});\n\treturn <div className={classes.Operators}>{operatorButtons}</div>;\n};\n\nexport default Operators;\n","import React from \"react\";\nimport classes from \"./Buttons.module.css\";\n\nimport Numbers from \"./Numbers/Numbers\";\nimport Functions from \"./Functions/Functions\";\nimport Operators from \"./Operators/Operators\";\n\nconst Buttons = (props) => {\n\treturn (\n\t\t<div className={classes.Buttons}>\n\t\t\t<Functions buttonClicked={props.buttonClicked} />\n\t\t\t<Numbers buttonClicked={props.buttonClicked} />\n\t\t\t<Operators buttonClicked={props.buttonClicked} />\n\t\t</div>\n\t);\n};\n\nexport default Buttons;\n","const Constants = {\n\tSpecialKeys: {\n\t\tPlusLess: \"&plusmn;\",\n\t\tDecimalPoint: \".\",\n\t},\n\tOperatorKeys: {\n\t\tAdd: \"+\",\n\t\tSubstract: \"-\",\n\t\tEquals: \"=\",\n\t\tDelete: \"\\u232b\",\n\t\tMultiply: \"\\u00d7\",\n\t\tDivision: \"\\u00f7\",\n\t},\n\tFunctionKeys: {\n\t\tPercentage: \"%\",\n\t\tSquareRoot: \"\\u221a\",\n\t\tPowerTwo: \"x\\u00b2\",\n\t\tPowerN: \"x\\u207f\",\n\t\tLogarithm: \"log\",\n\t\tNaturalLogarithm: \"logn\",\n\t\tClear: \"C\",\n\t},\n};\n\nexport default Constants;\n","import Constants from \"./Constants\";\n\nconst Helpers = {\n\tdecodeHtml: (htmlEntity) => {\n\t\tvar txt = document.createElement(\"textarea\");\n\t\ttxt.innerHTML = htmlEntity;\n\t\treturn txt.value;\n\t},\n\n\tgetOperationFromKeyPress: (event) => {\n\t\tconst eventKey = event.key;\n\t\tconst result = {\n\t\t\toperation: \"\",\n\t\t\taction: \"\",\n\t\t};\n\n\t\tswitch (eventKey) {\n\t\t\tcase Constants.OperatorKeys.Add:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Add;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.OperatorKeys.Substract:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Substract;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.OperatorKeys.Equals:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Equals;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"/\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Division;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"*\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Multiply;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\tcase \"Delete\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Delete;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"Escape\":\n\t\t\t\tresult.operation = Constants.FunctionKeys.Clear;\n\t\t\t\tresult.action = \"function\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.FunctionKeys.Percentage:\n\t\t\t\tresult.operation = Constants.FunctionKeys.Percentage;\n\t\t\t\tresult.action = \"function\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result;\n\t},\n\tswitchOperation: (prevResultString, currOperation) => {\n\t\tlet lastIndex = prevResultString.length - 1;\n\t\treturn prevResultString.substr(0, lastIndex) + currOperation;\n\t},\n};\n\nexport default Helpers;\n","import React, { Component } from \"react\";\n\nimport classes from \"./Screen.module.css\";\n\nclass Screen extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Screen}>\n\t\t\t\t<div className={classes.PrevResult}>\n\t\t\t\t\t<span>{this.props.prevResult}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.Result}>\n\t\t\t\t\t<span>{this.props.input}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Screen;\n","import React, { Component } from \"react\";\nimport classes from \"./Calculator.module.css\";\nimport buttonClasses from \"../../components/Button/Button.module.css\";\n\nimport Buttons from \"../Buttons/Buttons\";\nimport Constants from \"../../helpers/Constants\";\nimport Helpers from \"../../helpers/helpers\";\nimport Screen from \"../../components/Screen/Screen\";\n\nclass Calculator extends Component {\n\tstate = {\n\t\tinput: \"0\",\n\t\tprevResult: 0,\n\t\taccumulator: 0,\n\t\tprevResultString: \"\",\n\t\tcurrOperation: \"\",\n\t\tprevButton: null,\n\t\tshouldUpdateInput: false,\n\t};\n\tnoRenderState = {\n\t\tprevResult: 0,\n\t\taccumulator: 0,\n\t\tshouldUpdateWithoutRender: false,\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Calculator}>\n\t\t\t\t<Screen input={this.state.input} prevResult={this.state.prevResultString} />\n\t\t\t\t<Buttons buttonClicked={this.handleClick} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.handleKeyPress, false);\n\t}\n\n\taddActiveStyle = (button, action) => {\n\t\tif (\n\t\t\taction === \"number\" ||\n\t\t\tbutton.textContent === Constants.FunctionKeys.Clear ||\n\t\t\tbutton.textContent === Constants.OperatorKeys.Delete ||\n\t\t\tbutton.textContent === Constants.OperatorKeys.Equals\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tbutton.classList.add(buttonClasses.Active);\n\t\tconst prevButton = this.state.prevButton;\n\t\tif (prevButton != null && prevButton !== button) {\n\t\t\tprevButton.classList.remove(buttonClasses.Active);\n\t\t}\n\t\tthis.setState({\n\t\t\tprevButton: button,\n\t\t});\n\t};\n\n\thandleClick = (event) => {\n\t\tconst button = event.target;\n\t\tconst operation = button.textContent;\n\t\tconst action = button.getAttribute(\"data-action\");\n\t\tthis.handleInput(action, operation);\n\t\tthis.addActiveStyle(button, action);\n\t};\n\n\thandleKeyPress = (event) => {\n\t\tconst isNumeric = !isNaN(event.key) || event.key === Constants.SpecialKeys.DecimalPoint;\n\t\tif (isNumeric) {\n\t\t\tthis.handleInput(\"number\", event.key);\n\t\t} else {\n\t\t\tconst eventResult = Helpers.getOperationFromKeyPress(event);\n\t\t\tthis.handleInput(eventResult.action, eventResult.operation);\n\t\t}\n\t};\n\n\thandleInput = (action, operation) => {\n\t\tswitch (action) {\n\t\t\tcase \"number\":\n\t\t\t\tthis.handleNumber(operation);\n\t\t\t\tbreak;\n\t\t\tcase \"operation\":\n\t\t\t\tthis.handleOperator(operation);\n\t\t\t\tbreak;\n\t\t\tcase \"function\":\n\t\t\t\tthis.handleFunction(operation);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\thandleNumber = (operation) => {\n\t\tconst plusLess = Helpers.decodeHtml(Constants.SpecialKeys.PlusLess);\n\t\tlet input = this.state.input;\n\t\tlet parsed = Number(input);\n\n\t\t// To avoid concatenating the current number to the initial zero\n\t\tif (this.state.shouldUpdateInput) input = \"\";\n\t\tif (input === \"0\") input = \"\";\n\n\t\tif (operation === Constants.SpecialKeys.DecimalPoint) {\n\t\t\tif (input.indexOf(\".\") < 0) {\n\t\t\t\tif (input === \"\") input = \"0\";\n\t\t\t\tinput = input.concat(\".\");\n\t\t\t}\n\t\t} else if (operation === plusLess) {\n\t\t\tif (parsed > 0) {\n\t\t\t\tinput = \"-\" + input;\n\t\t\t} else if (parsed < 0) {\n\t\t\t\tinput = input.replace(\"-\", \"\");\n\t\t\t} else input = \"0\";\n\t\t} else {\n\t\t\tinput = input + operation;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t\taccumulator: Number(input),\n\t\t\tshouldUpdateInput: false,\n\t\t});\n\t};\n\n\thandleOperator = (operation, usePreviousInput) => {\n\t\tlet input = this.state.input;\n\t\tlet prevResult = this.state.prevResult;\n\t\tif (input === \"0\" && prevResult === 0) return;\n\n\t\tlet prevResultString = this.state.prevResultString;\n\t\tlet lastChar = prevResultString.length - 1;\n\t\tlet currOperation = prevResultString[lastChar];\n\n\t\t//Use the accumulator to apply the last operation to the previos result\n\t\tif (usePreviousInput) {\n\t\t\tinput = this.state.accumulator;\n\t\t}\n\n\t\tif (!this.shouldContinueSwitch(input, prevResult, prevResultString, operation, currOperation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (operation) {\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Add):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Add;\n\t\t\t\tthis.add(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Substract):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Substract;\n\t\t\t\tthis.subtract(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Multiply):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Multiply;\n\t\t\t\tthis.multiply(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Division):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Division;\n\t\t\t\tthis.divide(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\thandleFunction = (operation, usePreviousOperation) => {\n\t\tlet currOperation = \"\";\n\t\tlet input = this.state.input;\n\t\tlet prevResult = this.state.prevResult;\n\t\t// Use the accumulator to apply the last operation to the previos result\n\t\tif (usePreviousOperation) {\n\t\t\tinput = this.state.accumulator;\n\t\t}\n\n\t\tif (prevResult === \"\") prevResult = \"0\";\n\t\tswitch (operation) {\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Percentage):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.Percentage;\n\t\t\t\tthis.percentage(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.SquareRoot):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.SquareRoot;\n\t\t\t\tthis.squareRoot(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.PowerTwo):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.PowerTwo;\n\t\t\t\tthis.powerTwo(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Logarithm):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.Logarithm;\n\t\t\t\tthis.logarithm(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.NaturalLogarithm):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.NaturalLogarithm;\n\t\t\t\tthis.logarithmNatural(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Clear):\n\t\t\t\tthis.clear();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tshouldContinueSwitch = (input, prevResult, prevResultString, operation, currOperation) => {\n\t\tlet shouldContinueSwitch = true;\n\n\t\tswitch (operation) {\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Equals):\n\t\t\t\t// If the user hits the Equals key, and there is no input\n\t\t\t\t// then apply the previously executed operation\n\t\t\t\t//const usePreviousOp = prevResultString.indexOf(Constants.OperatorKeys.Equals) > 0;\n\t\t\t\tlet useAccumulator = this.state.accumulator !== 0;\n\t\t\t\tthis.handleOperator(currOperation, useAccumulator);\n\t\t\t\treturn false;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Delete):\n\t\t\t\t// If there is only one digit, display a zero\n\t\t\t\t// Otherwise, delete the last digit\n\t\t\t\tinput = input.toString();\n\t\t\t\tif (input.length <= 1) input = \"0\";\n\t\t\t\telse input = input.slice(0, -1);\n\t\t\t\tthis.setState({\n\t\t\t\t\tinput: input,\n\t\t\t\t\taccumulator: Number(input),\n\t\t\t\t});\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (prevResult !== \"\" || prevResult !== 0) {\n\t\t\t//If there's an operation in course, switch the operation to addition\n\t\t\tif (currOperation && currOperation !== operation) {\n\t\t\t\tif (input == prevResult || input == \"0\") {\n\t\t\t\t\tprevResultString = Helpers.switchOperation(prevResultString, operation);\n\t\t\t\t\tcurrOperation = operation;\n\t\t\t\t\tshouldContinueSwitch = false;\n\t\t\t\t} else {\n\t\t\t\t\t//Otherwise, execute previous operation and continue\n\t\t\t\t\tthis.noRenderState.shouldUpdateWithoutRender = true;\n\t\t\t\t\tthis.handleOperator(currOperation);\n\n\t\t\t\t\t//Update local state before applying current operation\n\t\t\t\t\tprevResult = this.noRenderState.prevResult;\n\n\t\t\t\t\t//Apply current operation\n\t\t\t\t\tprevResultString = prevResultString + input + operation;\n\t\t\t\t\tinput = prevResult;\n\t\t\t\t\tshouldContinueSwitch = false;\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tinput: input,\n\t\t\t\t\tprevResult: prevResult,\n\t\t\t\t\tprevResultString: prevResultString,\n\t\t\t\t\tcurrOperation: currOperation,\n\t\t\t\t\tshouldUpdateInput: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn shouldContinueSwitch;\n\t};\n\n\tclear = () => {\n\t\t//Make sure the button is not null\n\t\tif (this.state.prevButton) {\n\t\t\tthis.state.prevButton.classList.remove(buttonClasses.Active);\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: 0,\n\t\t\tprevResult: 0,\n\t\t\tprevResultString: \"\",\n\t\t\tcurrOperation: \"\",\n\t\t});\n\t};\n\n\tadd = (input, previousResult, currOperation) => {\n\t\t//If the calc is cleared and they press an operation button, do nothing\n\t\tlet prevResultString = this.state.prevResultString;\n\t\tpreviousResult = Number(previousResult) + Number(input);\n\t\tprevResultString = prevResultString + input + \"+\";\n\t\tinput = previousResult;\n\n\t\tif (this.noRenderState.shouldUpdateWithoutRender) {\n\t\t\tthis.noRenderState.prevResult = previousResult;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t\tprevResult: previousResult,\n\t\t\tprevResultString: prevResultString,\n\t\t\tcurrOperation: currOperation,\n\t\t\tshouldUpdateInput: true,\n\t\t});\n\t};\n\n\tsubtract = (input, previousResult, currOperation) => {\n\t\t//If the calc is cleared and the press an operation button, do nothing\n\t\tlet prevResultString = this.state.prevResultString;\n\t\tpreviousResult = Number(previousResult) - Number(input);\n\t\tprevResultString = prevResultString + input + \"-\";\n\t\tinput = previousResult;\n\n\t\tif (this.noRenderState.shouldUpdateWithoutRender) {\n\t\t\tthis.noRenderState.prevResult = previousResult;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t\tprevResult: previousResult,\n\t\t\tprevResultString: prevResultString,\n\t\t\tcurrOperation: currOperation,\n\t\t\tshouldUpdateInput: true,\n\t\t});\n\t};\n\n\tmultiply = (input, previousResult, currOperation) => {\n\t\t//If the calc is cleared and the press an operation button, do nothing\n\t\tlet prevResultString = this.state.prevResultString;\n\t\tif (input === \"0\" && previousResult === 0) return;\n\n\t\t//Apply the operation only when the input is not zero\n\t\tif (previousResult !== 0) {\n\t\t\tpreviousResult = Number(previousResult) * Number(input);\n\t\t} else {\n\t\t\tpreviousResult = Number(input);\n\t\t}\n\n\t\tprevResultString = prevResultString + input + Constants.OperatorKeys.Multiply;\n\t\tinput = previousResult;\n\n\t\tif (this.noRenderState.shouldUpdateWithoutRender) {\n\t\t\tthis.noRenderState.prevResult = previousResult;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t\tprevResult: previousResult,\n\t\t\tprevResultString: prevResultString,\n\t\t\tcurrOperation: currOperation,\n\t\t\tshouldUpdateInput: true,\n\t\t});\n\t};\n\n\tdivide = (input, previousResult, currOperation) => {\n\t\t//If the calc is cleared and the press an operation button, do nothing\n\t\tlet prevResultString = this.state.prevResultString;\n\t\tif (previousResult === 0 && input === \"0\") return;\n\n\t\t//Apply the operation only when the input is not zero\n\t\tif (previousResult !== 0) {\n\t\t\tif (input === \"0\") return;\n\t\t\tpreviousResult = Number(previousResult) / Number(input);\n\t\t} else {\n\t\t\tpreviousResult = Number(input);\n\t\t}\n\n\t\tprevResultString = prevResultString + input + Constants.OperatorKeys.Division;\n\t\tinput = previousResult;\n\n\t\tif (this.noRenderState.shouldUpdateWithoutRender) {\n\t\t\tthis.noRenderState.prevResult = previousResult;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t\tprevResult: previousResult,\n\t\t\tprevResultString: prevResultString,\n\t\t\tcurrOperation: currOperation,\n\t\t\tshouldUpdateInput: true,\n\t\t});\n\t};\n\n\tpercentage = (input, previousResult, currOperation) => {\n\t\tlet prevResult = \"\";\n\t\tif (previousResult === \"\" || previousResult === \"0\") {\n\t\t\tprevResult = Number(input);\n\t\t} else {\n\t\t\tprevResult = Number(previousResult) * (Number(input) / 100);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tsquareRoot = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.sqrt(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.sqrt(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tpowerTwo = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.pow(Number(previousResult), 2);\n\t\t} else {\n\t\t\tpreviousResult = Math.pow(Number(input), 2);\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tpowerN = (input, previousResult, currOperation) => {\n\t\tpreviousResult = Math.pow(Number(previousResult), Number(input));\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tlogarithm = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.log10(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.log10(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tlogarithmNatural = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.log(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.log(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Calculator from \"./containers/Calculator/Calculator\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>React Calculator</h1>\n\t\t\t<Calculator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}