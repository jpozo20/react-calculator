{"version":3,"sources":["components/Button/Button.module.css","components/Screen/Screen.module.css","containers/Calculator/Calculator.module.css","containers/Buttons/Buttons.module.css","containers/Buttons/Numbers/Numbers.module.css","containers/Buttons/Functions/Functions.module.css","containers/Buttons/Operators/Operators.module.css","components/Button/Button.js","containers/Buttons/Numbers/Numbers.js","containers/Buttons/Functions/Functions.js","containers/Buttons/Operators/Operators.js","containers/Buttons/Buttons.js","helpers/Constants.js","helpers/Helpers.js","components/Screen/Screen.js","containers/Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","type","className","classes","data-action","action","onClick","buttonClicked","text","Numbers","numberButtons","moreLess","key","decimalPoint","numbers","i","button","push","Functions","functionButtons","forEach","item","Operators","operatorButtons","Buttons","Constants","SpecialKeys","PlusLess","DecimalPoint","OperatorKeys","Add","Substract","Equals","Delete","Multiply","Division","FunctionKeys","Percentage","SquareRoot","PowerTwo","PowerN","Logarithm","NaturalLogarithm","Clear","Helpers","decodeHtml","htmlEntity","txt","document","createElement","innerHTML","value","getOperationFromKeyPress","event","result","operation","Screen","PrevResult","this","prevResult","Result","input","Component","Calculator","state","accumulator","currOperation","prevButton","addActiveStyle","textContent","classList","add","buttonClasses","Active","remove","setState","handleClick","console","log","target","getAttribute","handleInput","handleKeyPress","isNaN","eventResult","handleNumber","handleOperator","handleFunction","plusLess","parsed","Number","indexOf","concat","replace","usePreviousOperation","prevOperation","subtract","multiply","divide","usePreviousOp","length","slice","percentage","squareRoot","powerTwo","logarithm","logarithmNatural","clear","previousResult","Math","sqrt","pow","powerN","log10","addEventListener","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,qBCA3DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,OAAS,yB,kBCAnGD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,qQCcfC,EAZA,SAACC,GACf,OACC,4BACCC,KAAK,SACLC,UAAWC,IAAQJ,OACnBK,cAAaJ,EAAMK,OACnBC,QAASN,EAAMO,eACdP,EAAMQ,OCeKC,EApBC,SAACT,GAShB,IARA,IAAMU,EAAgB,GAChBC,EACL,kBAAC,EAAD,CAAQC,IAAI,KAAKJ,KAAK,OAAWH,OAAO,SAASE,cAAeP,EAAMO,gBAEjEM,EACL,kBAAC,EAAD,CAAQD,IAAI,KAAKJ,KAAK,IAAIH,OAAO,SAASE,cAAeP,EAAMO,gBAE1DO,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrDC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC5B,IAAIC,EACH,kBAAC,EAAD,CAAQJ,IAAKG,EAAI,IAAKP,KAAMM,EAAQC,GAAIR,cAAeP,EAAMO,cAAeF,OAAO,WAEpFK,EAAcO,KAAKD,GAIpB,OADAN,EAAcO,KAAKN,EAAUE,GACtB,yBAAKX,UAAWC,IAAQM,SAAUC,I,iBCL3BQ,EAZG,SAAClB,GAClB,IAAMmB,EAAkB,GAQxB,MANkB,CAAC,IAAK,SAAU,QAAW,MAAO,OAAQ,KAClDC,SAAQ,SAACC,GAClBF,EAAgBF,KACf,kBAAC,EAAD,CAAQL,IAAKS,EAAMb,KAAMa,EAAMd,cAAeP,EAAMO,cAAeF,OAAO,iBAGrE,yBAAKH,UAAWC,IAAQe,WAAYC,I,iBCQ7BG,EAjBG,SAACtB,GAClB,IAAMuB,EAAkB,GAaxB,MAXkB,CAAC,SAAU,OAAU,OAAU,IAAK,IAAK,KACjDH,SAAQ,SAACC,GAClBE,EAAgBN,KACf,kBAAC,EAAD,CACCL,IAAKS,EACLb,KAAMa,EACNd,cAAeP,EAAMO,cACrBF,OAAO,kBAIH,yBAAKH,UAAWC,IAAQmB,WAAYC,ICF7BC,EAVC,SAACxB,GAChB,OACC,yBAAKE,UAAWC,IAAQqB,SACvB,kBAAC,EAAD,CAAWjB,cAAeP,EAAMO,gBAChC,kBAAC,EAAD,CAASA,cAAeP,EAAMO,gBAC9B,kBAAC,EAAD,CAAWA,cAAeP,EAAMO,kBCYpBkB,EAxBG,CACjBC,YAAa,CACZC,SAAU,WACVC,aAAc,KAEfC,aAAc,CACbC,IAAK,IACLC,UAAW,IACXC,OAAQ,IACRC,OAAQ,SACRC,SAAU,OACVC,SAAU,QAEXC,aAAc,CACbC,WAAY,IACZC,WAAY,SACZC,SAAU,QACVC,OAAQ,UACRC,UAAW,MACXC,iBAAkB,OAClBC,MAAO,MCuCMC,EAzDC,CACfC,WAAY,SAACC,GACZ,IAAIC,EAAMC,SAASC,cAAc,YAEjC,OADAF,EAAIG,UAAYJ,EACTC,EAAII,OAGZC,yBAA0B,SAACC,GAC1B,IACMC,EAAS,CACdC,UAAW,GACXlD,OAAQ,IAGT,OANiBgD,EAAMzC,KAOtB,KAAKa,EAAUI,aAAaC,IAC3BwB,EAAOC,UAAY9B,EAAUI,aAAaC,IAC1CwB,EAAOjD,OAAS,YAChB,MACD,KAAKoB,EAAUI,aAAaE,UAC3BuB,EAAOC,UAAY9B,EAAUI,aAAaE,UAC1CuB,EAAOjD,OAAS,YAChB,MACD,KAAKoB,EAAUI,aAAaG,OAC3BsB,EAAOC,UAAY9B,EAAUI,aAAaG,OAC1CsB,EAAOjD,OAAS,YAChB,MACD,IAAK,IACJiD,EAAOC,UAAY9B,EAAUI,aAAaM,SAC1CmB,EAAOjD,OAAS,YAChB,MACD,IAAK,IACJiD,EAAOC,UAAY9B,EAAUI,aAAaK,SAC1CoB,EAAOjD,OAAS,YAChB,MACD,IAAK,YACL,IAAK,SACJiD,EAAOC,UAAY9B,EAAUI,aAAaI,OAC1CqB,EAAOjD,OAAS,YAChB,MACD,IAAK,SACJiD,EAAOC,UAAY9B,EAAUW,aAAaO,MAC1CW,EAAOjD,OAAS,WAChB,MACD,KAAKoB,EAAUW,aAAaC,WAC3BiB,EAAOC,UAAY9B,EAAUW,aAAaC,WAC1CiB,EAAOjD,OAAS,WAOlB,OAAOiD,I,gBCpCME,E,iLAbb,OACC,yBAAKtD,UAAWC,IAAQqD,QACvB,yBAAKtD,UAAWC,IAAQsD,YACvB,8BAAOC,KAAK1D,MAAM2D,aAEnB,yBAAKzD,UAAWC,IAAQyD,QACvB,8BAAOF,KAAK1D,MAAM6D,a,GARFC,aC8WNC,E,2MAxWdC,MAAQ,CACPH,MAAO,IACPI,YAAa,EACbN,WAAY,GACZO,cAAe,GACfC,WAAY,M,EAgBbC,eAAiB,SAACpD,EAAQX,GACzB,GACY,WAAXA,GACAW,EAAOqD,cAAgB5C,EAAUW,aAAaO,OAC9C3B,EAAOqD,cAAgB5C,EAAUI,aAAaI,QAC9CjB,EAAOqD,cAAgB5C,EAAUI,aAAaG,OAJ/C,CASAhB,EAAOsD,UAAUC,IAAIC,IAAcC,QACnC,IAAMN,EAAa,EAAKH,MAAMG,WACZ,MAAdA,GAAsBA,IAAenD,GACxCmD,EAAWG,UAAUI,OAAOF,IAAcC,QAE3C,EAAKE,SAAS,CACbR,WAAYnD,M,EAId4D,YAAc,SAACvB,GACdwB,QAAQC,IAAIN,KACZ,IAAMxD,EAASqC,EAAM0B,OACfxB,EAAYvC,EAAOqD,YACnBhE,EAASW,EAAOgE,aAAa,eACnC,EAAKC,YAAY5E,EAAQkD,GACzB,EAAKa,eAAepD,EAAQX,I,EAG7B6E,eAAiB,SAAC7B,GAEjB,IADmB8B,MAAM9B,EAAMzC,MAAQyC,EAAMzC,MAAQa,EAAUC,YAAYE,aAE1E,EAAKqD,YAAY,SAAU5B,EAAMzC,SAC3B,CACN,IAAMwE,EAAcxC,EAAQQ,yBAAyBC,GACrD,EAAK4B,YAAYG,EAAY/E,OAAQ+E,EAAY7B,a,EAInD0B,YAAc,SAAC5E,EAAQkD,GACtB,OAAQlD,GACP,IAAK,SACJ,EAAKgF,aAAa9B,GAClB,MACD,IAAK,YACJ,EAAK+B,eAAe/B,GACpB,MACD,IAAK,WACJ,EAAKgC,eAAehC,K,EAOvB8B,aAAe,SAAC9B,GACf,IAAMiC,EAAW5C,EAAQC,WAAWpB,EAAUC,YAAYC,UACtDkC,EAAQ,EAAKG,MAAMH,MACnB4B,EAASC,OAAO7B,GAGN,MAAVA,IAAeA,EAAQ,IAEvBN,IAAc9B,EAAUC,YAAYE,aACnCiC,EAAM8B,QAAQ,KAAO,IACV,KAAV9B,IAAcA,EAAQ,KAC1BA,EAAQA,EAAM+B,OAAO,MAEZrC,IAAciC,EAEvB3B,EADG4B,EAAS,EACJ,IAAM5B,EACJ4B,EAAS,EACX5B,EAAMgC,QAAQ,IAAK,IACb,IAEfhC,GAAgBN,EAEjB,EAAKoB,SAAS,CACbd,MAAOA,K,EAITyB,eAAiB,SAAC/B,EAAWuC,GAC5B,IAAI5B,EAAgB,GAChBL,EAAQ,EAAKG,MAAMH,MACnBF,EAAa,EAAKK,MAAML,WACxBoC,EAAgB,EAAK/B,MAAME,cAS/B,OANI4B,IACHjC,EAAQ,EAAKG,MAAMC,aAGD,KAAfN,IAAmBA,EAAa,KAE5BJ,GACP,KAAKX,EAAQC,WAAWpB,EAAUI,aAAaC,KAC9CoC,EAAgBzC,EAAUI,aAAaC,IACvC,EAAKyC,IAAIV,EAAOF,EAAYO,GAC5B,MAED,KAAKtB,EAAQC,WAAWpB,EAAUI,aAAaE,WAC9CmC,EAAgBzC,EAAUI,aAAaE,UACvC,EAAKiE,SAASnC,EAAOF,EAAYO,GACjC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUI,aAAaK,UAC9CgC,EAAgBzC,EAAUI,aAAaK,SACvC,EAAK+D,SAASpC,EAAOF,EAAYO,GACjC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUI,aAAaM,UAC9C+B,EAAgBzC,EAAUI,aAAaM,SACvC,EAAK+D,OAAOrC,EAAOF,EAAYO,GAC/B,MAED,KAAKtB,EAAQC,WAAWpB,EAAUI,aAAaG,QAG9C,IAAMmE,EAA0B,MAAVtC,EACtB,EAAKyB,eAAeS,EAAeI,GACnC,MAED,KAAKvD,EAAQC,WAAWpB,EAAUI,aAAaI,QAQ9C,OALwB4B,EAAH,IAAjBA,EAAMuC,OAAsB,IACnBvC,EAAMwC,MAAM,GAAI,QAC7B,EAAK1B,SAAS,CACbd,MAAOA,M,EAQX0B,eAAiB,SAAChC,EAAWuC,GAC5B,IAAI5B,EAAgB,GAChBL,EAAQ,EAAKG,MAAMH,MACnBF,EAAa,EAAKK,MAAML,WAO5B,OALImC,IACHjC,EAAQ,EAAKG,MAAMC,aAGD,KAAfN,IAAmBA,EAAa,KAC5BJ,GACP,KAAKX,EAAQC,WAAWpB,EAAUW,aAAaC,YAC9C6B,EAAgBzC,EAAUW,aAAaC,WACvC,EAAKiE,WAAWzC,EAAOF,EAAYO,GACnC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUW,aAAaE,YAC9C4B,EAAgBzC,EAAUW,aAAaE,WACvC,EAAKiE,WAAW1C,EAAOF,EAAYO,GACnC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUW,aAAaG,UAC9C2B,EAAgBzC,EAAUW,aAAaG,SACvC,EAAKiE,SAAS3C,EAAOF,EAAYO,GACjC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUW,aAAaK,WAC9CyB,EAAgBzC,EAAUW,aAAaK,UACvC,EAAKgE,UAAU5C,EAAOF,EAAYO,GAClC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUW,aAAaM,kBAC9CwB,EAAgBzC,EAAUW,aAAaM,iBACvC,EAAKgE,iBAAiB7C,EAAOF,EAAYO,GACzC,MAED,KAAKtB,EAAQC,WAAWpB,EAAUW,aAAaO,OAC9C,EAAKgE,U,EAQRA,MAAQ,WACP,EAAK3C,MAAMG,WAAWG,UAAUI,OAAOF,IAAcC,QACrD,EAAKE,SAAS,CACbd,MAAO,IACPI,YAAa,EACbN,WAAY,GACZO,cAAe,M,EAIjBK,IAAM,SAACjB,EAAQsD,EAAgB1C,GAC9B,IAAIP,EAAa+B,OAAOkB,GAAkBlB,OAAOpC,GAEjD,EAAKqB,SAAS,CACbd,MAAO,IACPI,YAAaX,EACbK,WAAYA,EACZO,cAAeA,K,EAIjB8B,SAAW,SAACnC,EAAO+C,EAAgB1C,GAClC,IAAIP,EAAa,GAEhBA,EADsB,KAAnBiD,GAA4C,MAAnBA,EACflB,OAAO7B,GAEP6B,OAAOkB,GAAkBlB,OAAO7B,GAG9C,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYA,EACZO,cAAeA,K,EAIjB+B,SAAW,SAACpC,EAAO+C,EAAgB1C,GAClC,GAAc,MAAVL,EAAJ,CAEA,IAAIF,EAAa,GAEhBA,EADsB,KAAnBiD,GAA4C,MAAnBA,EACflB,OAAO7B,GAEP6B,OAAOkB,GAAkBlB,OAAO7B,GAG9C,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYA,EACZO,cAAeA,M,EAIjBgC,OAAS,SAACrC,EAAO+C,EAAgB1C,GAChC,GAAc,MAAVL,EAAJ,CAEA,IAAIF,EAAa,GAEhBA,EADsB,KAAnBiD,GAA4C,MAAnBA,EACflB,OAAO7B,GAEP6B,OAAOkB,GAAkBlB,OAAO7B,GAG9C,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYA,EACZO,cAAeA,M,EAIjBoC,WAAa,SAACzC,EAAO+C,EAAgB1C,GACpC,IAAIP,EAAa,GAEhBA,EADsB,KAAnBiD,GAA4C,MAAnBA,EACflB,OAAO7B,GAEP6B,OAAOkB,IAAmBlB,OAAO7B,GAAS,KAGxD,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYA,EACZO,cAAeA,K,EAIjBqC,WAAa,SAAC1C,EAAO+C,EAAgB1C,GAEnC0C,EADa,MAAV/C,GAAoC,MAAnB+C,EACHC,KAAKC,KAAKpB,OAAOkB,IAEjBC,KAAKC,KAAKpB,OAAO7B,IAEnC,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYiD,EACZ1C,cAAeA,K,EAIjBsC,SAAW,SAAC3C,EAAO+C,EAAgB1C,GAEjC0C,EADa,MAAV/C,GAAoC,MAAnB+C,EACHC,KAAKE,IAAIrB,OAAOkB,GAAiB,GAEjCC,KAAKE,IAAIrB,OAAO7B,GAAQ,GAE1C,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYiD,EACZ1C,cAAeA,K,EAIjB8C,OAAS,SAACnD,EAAO+C,EAAgB1C,GAChC0C,EAAiBC,KAAKE,IAAIrB,OAAOkB,GAAiBlB,OAAO7B,IAEzD,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYiD,EACZ1C,cAAeA,K,EAIjBuC,UAAY,SAAC5C,EAAO+C,EAAgB1C,GAElC0C,EADa,MAAV/C,GAAoC,MAAnB+C,EACHC,KAAKI,MAAMvB,OAAOkB,IAElBC,KAAKI,MAAMvB,OAAO7B,IAEpC,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYiD,EACZ1C,cAAeA,K,EAIjBwC,iBAAmB,SAAC7C,EAAO+C,EAAgB1C,GAEzC0C,EADa,MAAV/C,GAAoC,MAAnB+C,EACHC,KAAK/B,IAAIY,OAAOkB,IAEhBC,KAAK/B,IAAIY,OAAO7B,IAElC,EAAKc,SAAS,CACbd,MAAO,IACPI,YAAaJ,EACbF,WAAYiD,EACZ1C,cAAeA,K,wEA1VhB,OACC,yBAAKhE,UAAWC,IAAQ4D,YACvB,kBAAC,EAAD,CAAQF,MAAOH,KAAKM,MAAMH,MAAOF,WAAYD,KAAKM,MAAML,aACxD,kBAAC,EAAD,CAASpD,cAAemD,KAAKkB,iB,0CAM/B5B,SAASkE,iBAAiB,QAASxD,KAAKwB,gBAAgB,O,GAnBjCpB,aCKVqD,MATf,WACC,OACC,yBAAKjH,UAAU,OACd,gDACA,kBAAC,EAAD,QCGiBkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1E,SAAS2E,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c392a2fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"Active\":\"Button_Active__cY1li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Screen_Screen__2d8yI\",\"PrevResult\":\"Screen_PrevResult__279ZQ\",\"Result\":\"Screen_Result__Qmtjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__PaHT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"Buttons_Buttons__2XOSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Numbers\":\"Numbers_Numbers__1h4qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Functions\":\"Functions_Functions__2Ptg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Operators\":\"Operators_Operators__2qYIq\"};","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={classes.Button}\n\t\t\tdata-action={props.action}\n\t\t\tonClick={props.buttonClicked}>\n\t\t\t{props.text}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport classes from \"./Numbers.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Numbers = (props) => {\n\tconst numberButtons = [];\n\tconst moreLess = (\n\t\t<Button key=\"xx\" text=\"&plusmn;\" action=\"number\" buttonClicked={props.buttonClicked} />\n\t);\n\tconst decimalPoint = (\n\t\t<Button key=\"xy\" text=\".\" action=\"number\" buttonClicked={props.buttonClicked} />\n\t);\n\tconst numbers = [\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\"];\n\tfor (var i = 0; i <= 9; i++) {\n\t\tvar button = (\n\t\t\t<Button key={i + \"x\"} text={numbers[i]} buttonClicked={props.buttonClicked} action=\"number\" />\n\t\t);\n\t\tnumberButtons.push(button);\n\t}\n\n\tnumberButtons.push(moreLess, decimalPoint);\n\treturn <div className={classes.Numbers}>{numberButtons}</div>;\n};\n\nexport default Numbers;\n","import React from \"react\";\n\nimport classes from \"./Functions.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Functions = (props) => {\n\tconst functionButtons = [];\n\t//                      SQRT,     x ^ 2,     x ^ n,\n\tconst functions = [\"%\", \"\\u221a\", \"x\\u00b2\", \"log\", \"logn\", \"C\"];\n\tfunctions.forEach((item) => {\n\t\tfunctionButtons.push(\n\t\t\t<Button key={item} text={item} buttonClicked={props.buttonClicked} action=\"function\" />\n\t\t);\n\t});\n\treturn <div className={classes.Functions}>{functionButtons}</div>;\n};\n\nexport default Functions;\n","import React from \"react\";\n\nimport classes from \"./Operators.module.css\";\nimport Button from \"../../../components/Button/Button\";\n\nconst Operators = (props) => {\n\tconst operatorButtons = [];\n\t//                 Delete,  Multiply,   Divide\n\tconst operators = [\"\\u232b\", \"\\u00d7\", \"\\u00f7\", \"+\", \"-\", \"=\"];\n\toperators.forEach((item) => {\n\t\toperatorButtons.push(\n\t\t\t<Button\n\t\t\t\tkey={item}\n\t\t\t\ttext={item}\n\t\t\t\tbuttonClicked={props.buttonClicked}\n\t\t\t\taction=\"operation\"\n\t\t\t/>\n\t\t);\n\t});\n\treturn <div className={classes.Operators}>{operatorButtons}</div>;\n};\n\nexport default Operators;\n","import React from \"react\";\nimport classes from \"./Buttons.module.css\";\n\nimport Numbers from \"./Numbers/Numbers\";\nimport Functions from \"./Functions/Functions\";\nimport Operators from \"./Operators/Operators\";\n\nconst Buttons = (props) => {\n\treturn (\n\t\t<div className={classes.Buttons}>\n\t\t\t<Functions buttonClicked={props.buttonClicked} />\n\t\t\t<Numbers buttonClicked={props.buttonClicked} />\n\t\t\t<Operators buttonClicked={props.buttonClicked} />\n\t\t</div>\n\t);\n};\n\nexport default Buttons;\n","const Constants = {\n\tSpecialKeys: {\n\t\tPlusLess: \"&plusmn;\",\n\t\tDecimalPoint: \".\",\n\t},\n\tOperatorKeys: {\n\t\tAdd: \"+\",\n\t\tSubstract: \"-\",\n\t\tEquals: \"=\",\n\t\tDelete: \"\\u232b\",\n\t\tMultiply: \"\\u00d7\",\n\t\tDivision: \"\\u00f7\",\n\t},\n\tFunctionKeys: {\n\t\tPercentage: \"%\",\n\t\tSquareRoot: \"\\u221a\",\n\t\tPowerTwo: \"x\\u00b2\",\n\t\tPowerN: \"x\\u207f\",\n\t\tLogarithm: \"log\",\n\t\tNaturalLogarithm: \"logn\",\n\t\tClear: \"C\",\n\t},\n};\n\nexport default Constants;\n","import Constants from \"./Constants\";\n\nconst Helpers = {\n\tdecodeHtml: (htmlEntity) => {\n\t\tvar txt = document.createElement(\"textarea\");\n\t\ttxt.innerHTML = htmlEntity;\n\t\treturn txt.value;\n\t},\n\n\tgetOperationFromKeyPress: (event) => {\n\t\tconst eventKey = event.key;\n\t\tconst result = {\n\t\t\toperation: \"\",\n\t\t\taction: \"\",\n\t\t};\n\n\t\tswitch (eventKey) {\n\t\t\tcase Constants.OperatorKeys.Add:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Add;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.OperatorKeys.Substract:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Substract;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.OperatorKeys.Equals:\n\t\t\t\tresult.operation = Constants.OperatorKeys.Equals;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"/\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Division;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"*\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Multiply;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\tcase \"Delete\":\n\t\t\t\tresult.operation = Constants.OperatorKeys.Delete;\n\t\t\t\tresult.action = \"operation\";\n\t\t\t\tbreak;\n\t\t\tcase \"Escape\":\n\t\t\t\tresult.operation = Constants.FunctionKeys.Clear;\n\t\t\t\tresult.action = \"function\";\n\t\t\t\tbreak;\n\t\t\tcase Constants.FunctionKeys.Percentage:\n\t\t\t\tresult.operation = Constants.FunctionKeys.Percentage;\n\t\t\t\tresult.action = \"function\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result;\n\t},\n};\n\nexport default Helpers;\n","import React, { Component } from \"react\";\n\nimport classes from \"./Screen.module.css\";\n\nclass Screen extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Screen}>\n\t\t\t\t<div className={classes.PrevResult}>\n\t\t\t\t\t<span>{this.props.prevResult}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.Result}>\n\t\t\t\t\t<span>{this.props.input}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Screen;\n","import React, { Component } from \"react\";\nimport classes from \"./Calculator.module.css\";\nimport buttonClasses from \"../../components/Button/Button.module.css\";\n\nimport Buttons from \"../Buttons/Buttons\";\nimport Constants from \"../../helpers/Constants\";\nimport Helpers from \"../../helpers/Helpers\";\nimport Screen from \"../../components/Screen/Screen\";\n\nclass Calculator extends Component {\n\tstate = {\n\t\tinput: \"0\",\n\t\taccumulator: 0,\n\t\tprevResult: \"\",\n\t\tcurrOperation: \"\",\n\t\tprevButton: null,\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Calculator}>\n\t\t\t\t<Screen input={this.state.input} prevResult={this.state.prevResult} />\n\t\t\t\t<Buttons buttonClicked={this.handleClick} />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.handleKeyPress, false);\n\t}\n\n\taddActiveStyle = (button, action) => {\n\t\tif (\n\t\t\taction === \"number\" ||\n\t\t\tbutton.textContent === Constants.FunctionKeys.Clear ||\n\t\t\tbutton.textContent === Constants.OperatorKeys.Delete ||\n\t\t\tbutton.textContent === Constants.OperatorKeys.Equals\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tbutton.classList.add(buttonClasses.Active);\n\t\tconst prevButton = this.state.prevButton;\n\t\tif (prevButton != null && prevButton !== button) {\n\t\t\tprevButton.classList.remove(buttonClasses.Active);\n\t\t}\n\t\tthis.setState({\n\t\t\tprevButton: button,\n\t\t});\n\t};\n\n\thandleClick = (event) => {\n\t\tconsole.log(buttonClasses);\n\t\tconst button = event.target;\n\t\tconst operation = button.textContent;\n\t\tconst action = button.getAttribute(\"data-action\");\n\t\tthis.handleInput(action, operation);\n\t\tthis.addActiveStyle(button, action);\n\t};\n\n\thandleKeyPress = (event) => {\n\t\tconst isNumeric = !isNaN(event.key) || event.key === Constants.SpecialKeys.DecimalPoint;\n\t\tif (isNumeric) {\n\t\t\tthis.handleInput(\"number\", event.key);\n\t\t} else {\n\t\t\tconst eventResult = Helpers.getOperationFromKeyPress(event);\n\t\t\tthis.handleInput(eventResult.action, eventResult.operation);\n\t\t}\n\t};\n\n\thandleInput = (action, operation) => {\n\t\tswitch (action) {\n\t\t\tcase \"number\":\n\t\t\t\tthis.handleNumber(operation);\n\t\t\t\tbreak;\n\t\t\tcase \"operation\":\n\t\t\t\tthis.handleOperator(operation);\n\t\t\t\tbreak;\n\t\t\tcase \"function\":\n\t\t\t\tthis.handleFunction(operation);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\thandleNumber = (operation) => {\n\t\tconst plusLess = Helpers.decodeHtml(Constants.SpecialKeys.PlusLess);\n\t\tlet input = this.state.input;\n\t\tlet parsed = Number(input);\n\n\t\t// To avoid concatenating the current number to the initial zero\n\t\tif (input === \"0\") input = \"\";\n\n\t\tif (operation === Constants.SpecialKeys.DecimalPoint) {\n\t\t\tif (input.indexOf(\".\") < 0) {\n\t\t\t\tif (input === \"\") input = \"0\";\n\t\t\t\tinput = input.concat(\".\");\n\t\t\t}\n\t\t} else if (operation === plusLess) {\n\t\t\tif (parsed > 0) {\n\t\t\t\tinput = \"-\" + input;\n\t\t\t} else if (parsed < 0) {\n\t\t\t\tinput = input.replace(\"-\", \"\");\n\t\t\t} else input = \"0\";\n\t\t} else {\n\t\t\tinput = input + operation;\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: input,\n\t\t});\n\t};\n\n\thandleOperator = (operation, usePreviousOperation) => {\n\t\tlet currOperation = \"\";\n\t\tlet input = this.state.input;\n\t\tlet prevResult = this.state.prevResult;\n\t\tlet prevOperation = this.state.currOperation;\n\n\t\t// Use the accumulator to apply the last operation to the previos result\n\t\tif (usePreviousOperation) {\n\t\t\tinput = this.state.accumulator;\n\t\t}\n\n\t\tif (prevResult === \"\") prevResult = \"0\";\n\n\t\tswitch (operation) {\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Add):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Add;\n\t\t\t\tthis.add(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Substract):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Substract;\n\t\t\t\tthis.subtract(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Multiply):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Multiply;\n\t\t\t\tthis.multiply(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Division):\n\t\t\t\tcurrOperation = Constants.OperatorKeys.Division;\n\t\t\t\tthis.divide(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Equals):\n\t\t\t\t// If the user hits the Equals key, and there is no input\n\t\t\t\t// then apply the previously executed operation\n\t\t\t\tconst usePreviousOp = input === \"0\";\n\t\t\t\tthis.handleOperator(prevOperation, usePreviousOp);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.OperatorKeys.Delete):\n\t\t\t\t// If there is only one digit, display a zero\n\t\t\t\t// Otherwise, delete the last digit\n\t\t\t\tif (input.length === 1) input = \"0\";\n\t\t\t\telse input = input.slice(0, -1);\n\t\t\t\tthis.setState({\n\t\t\t\t\tinput: input,\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\thandleFunction = (operation, usePreviousOperation) => {\n\t\tlet currOperation = \"\";\n\t\tlet input = this.state.input;\n\t\tlet prevResult = this.state.prevResult;\n\t\t// Use the accumulator to apply the last operation to the previos result\n\t\tif (usePreviousOperation) {\n\t\t\tinput = this.state.accumulator;\n\t\t}\n\n\t\tif (prevResult === \"\") prevResult = \"0\";\n\t\tswitch (operation) {\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Percentage):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.Percentage;\n\t\t\t\tthis.percentage(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.SquareRoot):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.SquareRoot;\n\t\t\t\tthis.squareRoot(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.PowerTwo):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.PowerTwo;\n\t\t\t\tthis.powerTwo(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Logarithm):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.Logarithm;\n\t\t\t\tthis.logarithm(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.NaturalLogarithm):\n\t\t\t\tcurrOperation = Constants.FunctionKeys.NaturalLogarithm;\n\t\t\t\tthis.logarithmNatural(input, prevResult, currOperation);\n\t\t\t\tbreak;\n\n\t\t\tcase Helpers.decodeHtml(Constants.FunctionKeys.Clear):\n\t\t\t\tthis.clear();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tclear = () => {\n\t\tthis.state.prevButton.classList.remove(buttonClasses.Active);\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: 0,\n\t\t\tprevResult: \"\",\n\t\t\tcurrOperation: \"\",\n\t\t});\n\t};\n\n\tadd = (result, previousResult, currOperation) => {\n\t\tlet prevResult = Number(previousResult) + Number(result);\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: result,\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tsubtract = (input, previousResult, currOperation) => {\n\t\tlet prevResult = \"\";\n\t\tif (previousResult === \"\" || previousResult === \"0\") {\n\t\t\tprevResult = Number(input);\n\t\t} else {\n\t\t\tprevResult = Number(previousResult) - Number(input);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tmultiply = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\") return;\n\n\t\tlet prevResult = \"\";\n\t\tif (previousResult === \"\" || previousResult === \"0\") {\n\t\t\tprevResult = Number(input);\n\t\t} else {\n\t\t\tprevResult = Number(previousResult) * Number(input);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tdivide = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\") return;\n\n\t\tlet prevResult = \"\";\n\t\tif (previousResult === \"\" || previousResult === \"0\") {\n\t\t\tprevResult = Number(input);\n\t\t} else {\n\t\t\tprevResult = Number(previousResult) / Number(input);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tpercentage = (input, previousResult, currOperation) => {\n\t\tlet prevResult = \"\";\n\t\tif (previousResult === \"\" || previousResult === \"0\") {\n\t\t\tprevResult = Number(input);\n\t\t} else {\n\t\t\tprevResult = Number(previousResult) * (Number(input) / 100);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: prevResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tsquareRoot = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.sqrt(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.sqrt(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tpowerTwo = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.pow(Number(previousResult), 2);\n\t\t} else {\n\t\t\tpreviousResult = Math.pow(Number(input), 2);\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tpowerN = (input, previousResult, currOperation) => {\n\t\tpreviousResult = Math.pow(Number(previousResult), Number(input));\n\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tlogarithm = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.log10(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.log10(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n\n\tlogarithmNatural = (input, previousResult, currOperation) => {\n\t\tif (input === \"0\" && previousResult !== \"0\") {\n\t\t\tpreviousResult = Math.log(Number(previousResult));\n\t\t} else {\n\t\t\tpreviousResult = Math.log(Number(input));\n\t\t}\n\t\tthis.setState({\n\t\t\tinput: \"0\",\n\t\t\taccumulator: input,\n\t\t\tprevResult: previousResult,\n\t\t\tcurrOperation: currOperation,\n\t\t});\n\t};\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Calculator from \"./containers/Calculator/Calculator\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>React Calculator</h1>\n\t\t\t<Calculator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}